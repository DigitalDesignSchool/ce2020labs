# RISC-V simple sprite move program
#
# Dmitry Smekhov, 2021
#

            .text

start:      li   a0, 0x20     # X
            li   a1, 0x30     # Y
            li   a2, 1      # step  X
            li 	 a3, 0	    # step  Y
            li   a4, 2    # cnt

            li  x1, line_1 
		    beq zero, zero, move_line	
		
line_1:		j start
		
		li  a2, 0
		li  a3, 1
		li  a4, 400
		call move_line
		
		li a2, -1
		li a3, 0
		li a4, 620
		call move_line
		
		li a2, 0
		li a3, -1
		li a4, 400
		call move_line
		
		j start
		
#
#  move sprite for line
#
#  inout:
#	a0 - X
#	a1 - Y
#
# input:
#	a2 - delta X
# 	a3 - delta Y
#	a4 - step count
#
# after return:
# 	a0 - new X
#	a1 - new Y
#
#		
move_line:  	li t4,0

move_x:     	li a6, 0
            	li a7, 2

loop_vsync: 	addi t6, zero, 0x0FF
            	addi t6, zero, 0x0FF	# delay for update new value of SPRITE_NUM
            	addi t6, zero, 0x0FF
wait_vsync0: 	beq  t5, zero, wait_vsync0

            	addi a6, a6, 1
            	bne  a6, a7, loop_vsync



            addi t6, zero, 0x000
            addi t5, a0, 0
            addi t5, a1, 0
#		li t6, 0x000 	# Prepare for set x,y for sprite 0
#		mv t5, a0	# set X
#		mv t5, a1	# set Y (field SEL has been incremented)
			
		add a0, a0, a2	# increment X
		add a1, a1, a3	# increment Y

            	addi t4, t4, 1	# increment conter
            	bne t4, a4, move_x	# compare counter with limit

            	ret

#            addi t6, zero, 0x000
#            addi t5, zero, 0x10   # X
#            addi t5, zero, 0x21   # Y

